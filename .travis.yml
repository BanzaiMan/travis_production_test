language: ruby
dist: xenial
sudo: required
addons:
  postgresql: 10
env:
  global:
    - secure: "Ofh4egBqeXc7IgOqolyUvfRMXJ8lGzY4amNtI04xayGiFss/3B5huPHGB+0WgUAV3ZmpU3zHIOG72WsgRauYvQGFygsDxmO+zpWx2OR69zTuXbU8e0V+/Qizn8rSRLNeFiOo6QW3yhnoLV4G1bgb0I5BnflJdVpCnrrqjk5pzh8="

install: skip
script:
  - sudo -u postgres psql postgres -c 'SELECT version()'
# gemfile: our_gemfile

# script: skip

# cache:
#   bundler: true

# jobs:
#   include:
#     - language: c
#       os: linux
#       dist: trusty
#       env: JOB='Linux' GENERATOR='Unix Makefiles' CMAKE_FLAGS='-DPLATFORM_BUILD_SHARED=TRUE -DPLATFORM_ENABLE_DEBUG=FALSE'
    # - sudo: false
    #   dist: precise
    #   env: DIST=precise STACK=EC2
    # - sudo: required
    #   dist: precise
    #   env: DIST=precise STACK=GCE
    # - stage: second
    #   sudo: false
    #   dist: trusty
    #   env: DIST=trusty STACK=EC2
    # - sudo: required
    #   dist: trusty
    #   env: DIST=trusty STACK=GCE
    # - sudo: false
    #   dist: trusty
    #   group: edge
    #   env: DIST=trusty STACK=EC2 GROUP=edge
    # - sudo: required
    #   dist: trusty
    #   group: edge
    #   env: DIST=trusty STACK=GCE GROUP=edge
#     - os: osx

# before_deploy:
#   - git config --local user.name "travis deploy"
#   - git config --local user.email "foo@example.com"
#   - git tag super_awesome_tag_1 -f

#  provider: releases
#  api_key: $GITHUB_OAUTH_TOKEN
#    # secure: "Z1nvXbiv2qZT42nuz9T+Xx1BfQFsuYDKfdTIZVzu1RVj4uff3ZR9O7ACf4jipcFF37QSBDT1bIlIu+FYPclXHYNkWyQwahIpr5knQ2V7vv9KK2PvPoSgRXPtWwqUmwstDtUgsoaQz2Q1Yfyyyh4jWsNAEe+HJBdAMRfzFsDXNM4="
#  file: test.rb
#  on:
#    all_branches: true
#    tags: true
# #   edge:
# #     branch: releases-verbose

notifications:
  email: false

  #  slack:
  #  rooms:
  #    - secure: "KZTfjxhkOdDDZYD2ThBILt2ShYtdEee3PudFZlQBfpxG9N470GfxnKVfOl7Odu4lN6cIupwC4S4BnehubEywSR99l60VmfhePUCTqDLYy+iR9+guTvaECdXdaau3jTKhFdu5u60ITsiw5Yb+hwAaGFO0HmQhqR9XVr/U8IGQlok="
  #  template:
  #    - "Build <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}>) of %{repository}@%{branch} by %{author} %{result} in %{duration} (elapsed time: %{elapsed_time}) subject: %{commit_subject} message: %{commit_message} foobar"
  #  on_success: always
